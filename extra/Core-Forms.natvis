<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

	<Type Name="nstd::bitset&lt;*&gt;">
		<DisplayString>{Value,en}</DisplayString>
	</Type>

	<Type Name="core::ObservableEvent&lt;*&gt;">
		<Intrinsic Name="size" Expression="(size_t)(Observers._Mypair._Myval2._Mylast - Observers._Mypair._Myval2._Myfirst)" />
		<DisplayString Condition="size() == 0">{{ empty }}</DisplayString>
		<DisplayString>{{ {size()} listener(s) }}</DisplayString>
	</Type>
	
	<Type Name="core::SmartHandle&lt;*,*&gt;">
		<DisplayString Condition="Object._Rep == 0">{{ empty }}</DisplayString>
		<DisplayString>{{ present }}</DisplayString>
	</Type>

	<Type Name="core::win::ResourceId">
		<Intrinsic Name="index" Expression="(int)Ident._Which"/>
		<DisplayString Condition="index() == 0" Optional="true">#{Ident._Head}</DisplayString>
		<DisplayString Condition="index() == 1" Optional="true">{Ident._Tail._Head,su}</DisplayString>
		<DisplayString>&lt;Cannot determine&gt;</DisplayString>
	</Type>

	<Type Name="core::forms::Brush">
		<DisplayString>{Handle}</DisplayString>
	</Type>

	<Type Name="core::forms::Rect">
		<DisplayString>{{ {Left},{Top} [{Right-Left}x{Bottom-Top}] }}</DisplayString>
	</Type>

	<Type Name="core::forms::Font">
		<DisplayString>{Handle}</DisplayString>
	</Type>

	<Type Name="core::forms::DeviceContext">
		<DisplayString>&lt;Not implemented&gt;</DisplayString>
	</Type>

	<Type Name="core::forms::ResourceIdOrString">
		<DisplayString Condition="Value.index()==0">{Value._Head}</DisplayString>
		<DisplayString>{Value._Tail._Head}</DisplayString>
	</Type>

	<Type Name="core::forms::DialogTemplate">
		<DisplayString>{{ {Title}  ({Controls.size()} controls) }}</DisplayString>
		<Expand>
			<Item Name="[class]">ClassName</Item>
			<Item Name="[title]">Title</Item>
			<Item Name="[style]">Style</Item>
			<Item Name="[exStyle]">ExtendedStyle</Item>
			<Item Name="[font]">Font</Item>
			<Item Name="[points]">Height</Item>
			<Item Name="[controls]">Controls</Item>
		</Expand>
	</Type>

	<Type Name="core::forms::DialogItemTemplate">
		<DisplayString>{{ {ClassName,sub} (#{(signed)Ident}) {Title} }}</DisplayString>
	</Type>

	<Type Name="core::forms::UnmanagedWindow">
		<DisplayString Condition="!Handle">{{ empty }}</DisplayString>
		<DisplayString>{{ present }}</DisplayString>
	</Type>

	<Type Name="core::forms::Window::ChildWindowCollection">
		<DisplayString>{{ virtual-collection }}</DisplayString>
	</Type>

	<Type Name="core::forms::Window::TimerCollection">
		<DisplayString>{{ virtual-collection }}</DisplayString>
	</Type>

	<Type Name="core::forms::Window::DebuggingAide::StateDescription">
		<DisplayString Condition="strlen(Message)">{State,en}: {Message,sb}</DisplayString>
		<DisplayString>{State,en}</DisplayString>
	</Type>

	<Type Name="core::forms::Window::DebuggingAide">
		<DisplayString Condition="strlen(Class._Elems) &amp;&amp; strlen(Text._Elems)">{{ {Class._Elems,sb}: {Text._Elems,s}  {State} }}</DisplayString>
		<DisplayString Condition="strlen(Class._Elems)">{{ {Class._Elems,sb}: {State} }}</DisplayString>
		<DisplayString Condition="State.State == forms::Window::ProcessingState::NotApplicable">{{ N/A }}</DisplayString>
		<DisplayString>{{ {State} }}</DisplayString>
	</Type>

	<Type Name="core::forms::Window::MessageDictionary::MessageProperties">
		<DisplayString>{{ {Name,sb} ({Ident,x}) }}</DisplayString>
	</Type>

	<Type Name="core::forms::Window">
		<Intrinsic Name="size" Expression="Created.size()+Destroyed.size()+Shown.size()+Hidden.size()+Painted.size()+Resized.size()+Clicked.size()+FontChanged.size()" />
		<DisplayString Condition="__vfptr == 0xccCCccCCccCCccCC">&lt;Uninitialized&gt;</DisplayString>
		<DisplayString Condition="!Handle">{{ &lt;Not a window&gt; }}</DisplayString>
		<DisplayString>{Debug}</DisplayString>
		<Expand>
			<Item Name="[class]">Debug.Class._Elems,sb</Item>
			<Item Name="[background]" Condition="Background._Has_value">Background</Item>
			<Item Name="[backcolour]" Condition="BackColour._Has_value">BackColour</Item>
			<Item Name="[forecolour]" Condition="TextColour._Has_value">TextColour</Item>
			<Item Name="[font]" Condition="CustomFont._Has_value">CustomFont</Item>
			<Item Name="[preview]">Debug.Text._Elems,s</Item>
			<Item Name="[state]">Debug.State</Item>
			<Synthetic Name="[listeners]">
				<DisplayString>{size()} listener(s)</DisplayString>
				<Expand>
					<Item Name="[created]" Condition="Created.size()">Created</Item>
					<Item Name="[destroyed]" Condition="Destroyed.size()">Destroyed</Item>
					<Item Name="[shown]" Condition="Shown.size()">Shown</Item>
					<Item Name="[hidden]" Condition="Hidden.size()">Hidden</Item>
					<Item Name="[painted]" Condition="Painted.size()">Painted</Item>
					<Item Name="[resized]" Condition="Resized.size()">Resized</Item>
					<Item Name="[clicked]" Condition="Clicked.size()">Clicked</Item>
					<Item Name="[font-changed]" Condition="FontChanged.size()">FontChanged</Item>
				</Expand>
			</Synthetic>
		</Expand>
	</Type>
	
	<Type Name="core::forms::Control">
		<DisplayString Condition="__vfptr == 0xccCCccCCccCCccCC">&lt;Uninitialized&gt;</DisplayString>
		<DisplayString Condition="!Handle">{{ id={Ident,d} &lt;Not a window&gt; }}</DisplayString>
		<DisplayString>{{ {Debug.Class._Elems,sb}: {Debug.Text._Elems,s}  id={Ident,d}  {Debug.State} }}</DisplayString>
		<Expand>
			<Item Name="[ident]">Ident</Item>
			<ExpandedItem>*(core::forms::Window*)this,nd</ExpandedItem>
		</Expand>
	</Type>

	<Type Name="core::forms::ControlDictionary">
		<Intrinsic Name="size" Expression="(size_t)m_items._Mypair._Myval2._Myval2._Mysize"/>
		<DisplayString>{{ {size()} controls }}</DisplayString>
	</Type>

	<Type Name="core::forms::Dialog::EarlyBoundControlCollection">
		<DisplayString>{{ {Controls.size()} controls }}</DisplayString>
	</Type>

	<Type Name="core::forms::Dialog::MouseCaptureState">
		<DisplayString Condition="IsCaptured">{{ captured }}</DisplayString>
		<DisplayString>{{ not-captured }}</DisplayString>
	</Type>

	<Type Name="core::forms::WindowCaptionButtons">
		<DisplayString>{{ 3 buttons }}</DisplayString>
	</Type>

	<Type Name="core::forms::Dialog">
		<DisplayString Condition="__vfptr == 0xccCCccCCccCCccCC">&lt;Uninitialized&gt;</DisplayString>
		<DisplayString Condition="!Handle">{{ Dialog id={DialogId} &lt;Not a window&gt; }}</DisplayString>
		<DisplayString>{{ Dialog: {Debug.Text._Elems,s}  id={DialogId}  {DisplayMode,en}  {Debug.State} }}</DisplayString>
		<Expand>
			<Item Name="[ident]">DialogId</Item>
			<Item Name="[mode]">DisplayMode</Item>
			<ExpandedItem>*(core::forms::Window*)this,nd</ExpandedItem>
		</Expand>
	</Type>

	<Type Name="core::forms::ButtonControl">
		<DisplayString Condition="__vfptr == 0xccCCccCCccCCccCC">&lt;Uninitialized&gt;</DisplayString>
		<DisplayString Condition="!Handle">{{ Button: id={Ident,d} &lt;Not a window&gt; }}</DisplayString>
		<DisplayString>{{ Button: {Debug.Text._Elems,s}  id={Ident,d}  {Debug.State} }}</DisplayString>
		<Expand>
			<ExpandedItem>*(core::forms::Control*)this,nd</ExpandedItem>
		</Expand>
	</Type>

	<Type Name="core::forms::CheckBoxControl">
		<DisplayString Condition="__vfptr == 0xccCCccCCccCCccCC">&lt;Uninitialized&gt;</DisplayString>
		<DisplayString Condition="!Handle">{{ CheckBox: id={Ident,d} &lt;Not a window&gt; }}</DisplayString>
		<DisplayString>{{ CheckBox: {Debug.Text._Elems,s}  id={Ident,d}  {Debug.State} }}</DisplayString>
		<Expand>
			<ExpandedItem>*(core::forms::Control*)this,nd</ExpandedItem>
		</Expand>
	</Type>

	<Type Name="core::forms::GroupBoxControl">
		<DisplayString Condition="__vfptr == 0xccCCccCCccCCccCC">&lt;Uninitialized&gt;</DisplayString>
		<DisplayString Condition="!Handle">{{ GroupBox: id={Ident,d} &lt;Not a window&gt; }}</DisplayString>
		<DisplayString>{{ GroupBox: {Debug.Text._Elems,s}  id={Ident,d}  {Debug.State} }}</DisplayString>
		<Expand>
			<ExpandedItem>*(core::forms::Control*)this,nd</ExpandedItem>
		</Expand>
	</Type>

	<Type Name="core::forms::LabelControl">
		<DisplayString Condition="__vfptr == 0xccCCccCCccCCccCC">&lt;Uninitialized&gt;</DisplayString>
		<DisplayString Condition="!Handle">{{ Label: id={Ident,d} &lt;Not a window&gt; }}</DisplayString>
		<DisplayString>{{ Label: {Debug.Text._Elems,s}  id={Ident,d}  {Debug.State} }}</DisplayString>
		<Expand>
			<Item Name="[alignment]">TextAlignment,en</Item>
			<ExpandedItem>*(core::forms::Control*)this,nd</ExpandedItem>
		</Expand>
	</Type>

	<Type Name="core::forms::OwnerDrawEventArgs">
		<DisplayString>{{ {Type,en} action={Action.Value,en} id={Ident,d} item={Item.Index} state={Item.State} }}</DisplayString>
	</Type>

	<Type Name="core::forms::MeasureItemEventArgs">
		<DisplayString>{{ {Type,en} id={Ident,d} item={Item.Index} width={Width} height={Height} }}</DisplayString>
	</Type>

	<Type Name="core::forms::ComboBoxControl::ItemCollection">
		<DisplayString>{{ Virtual collection }}</DisplayString>
	</Type>

	<Type Name="core::forms::ComboBoxControl::Item">
		<DisplayString>{{ Item #{Index} of ComboBox with id={Owner.Ident} }}</DisplayString>
	</Type>

	<Type Name="core::forms::ComboBoxControl::ItemData">
		<DisplayString>{{ {Title} text={Text} }}</DisplayString>
	</Type>

	<Type Name="core::forms::ListBoxControl::ItemCollection">
		<DisplayString>{{ Virtual collection }}</DisplayString>
	</Type>
</AutoVisualizer>