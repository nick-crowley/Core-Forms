<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

	<Type Name="nstd::bitset&lt;*&gt;">
		<DisplayString>{Value,en}</DisplayString>
	</Type>

	<Type Name="core::ObservableEvent&lt;*&gt;">
		<Intrinsic Name="size" Expression="Observers.size()" />
		<DisplayString Condition="size() == 0">{{ empty }}</DisplayString>
		<DisplayString>{{ {size()} listener(s) }}</DisplayString>
	</Type>
	
	<Type Name="core::SmartHandle&lt;*,*&gt;">
		<DisplayString Condition="Object._Rep == 0">{{ empty }}</DisplayString>
		<DisplayString>{{ present }}</DisplayString>
	</Type>

	<Type Name="core::win::ResourceId">
		<Intrinsic Name="index" Expression="(int)Ident._Which"/>
		<DisplayString Condition="index() == 0" Optional="true">#{Ident._Head}</DisplayString>
		<DisplayString Condition="index() == 1" Optional="true">{Ident._Tail._Head,su}</DisplayString>
		<DisplayString>&lt;Cannot determine&gt;</DisplayString>
	</Type>

	<Type Name="std::variant&lt;enum core::forms::Colour,enum core::forms::SystemColour,core::meta::transparent_t&gt;"> 
		 <Intrinsic Name="index" Expression="(int)_Which"/>
		 <DisplayString Condition="index() == 0" Optional="true">{_Head,x}</DisplayString>
		 <DisplayString Condition="index() == 1" Optional="true">{_Tail._Head,en}</DisplayString>
		 <DisplayString Condition="index() == 2" Optional="true">transparent</DisplayString>
		<DisplayString>&lt;Cannot determine&gt;</DisplayString>
	</Type>

	<Type Name="core::forms::Brush">
		<DisplayString>{Handle}</DisplayString>
	</Type>

  <Type Name="core::forms::Menu::Item">
    <Intrinsic Name="index" Expression="(int)Ident._Which"/>
    <DisplayString Condition="index() == 0" Optional="true">Item cmd={Ident._Head}</DisplayString>
    <DisplayString Condition="index() == 1" Optional="true">Item pos=#{Ident._Tail._Head}</DisplayString>
    <DisplayString>&lt;Cannot determine&gt;</DisplayString>
  </Type>

  <Type Name="core::forms::Menu::ItemCollection">
    <DisplayString>{{ Virtual collection }}</DisplayString>
  </Type>

  <Type Name="core::forms::Rect">
		<DisplayString>{{{Left},{Top}}} [{Right-Left}x{Bottom-Top}]</DisplayString>
    <Expand HideRawView="true">
      <Item Name="[left]">Left</Item>
      <Item Name="[top]">Top</Item>
      <Item Name="[right]">Right</Item>
      <Item Name="[bottom]">Bottom</Item>
      <Item Name="[width]">Right-Left</Item>
      <Item Name="[height]">Bottom-Top</Item>
    </Expand>
	</Type>

  <Type Name="core::forms::Point">
    <DisplayString>{{{X},{Y}}}</DisplayString>
    <Expand HideRawView="true">
      <Item Name="[X]">X</Item>
      <Item Name="[Y]">Y</Item>
    </Expand>
  </Type>

  <Type Name="core::forms::Font">
		<DisplayString>{Handle}</DisplayString>
	</Type>

	<Type Name="core::forms::DeviceContext">
		<DisplayString>&lt;Not implemented&gt;</DisplayString>
	</Type>

	<Type Name="core::forms::ResourceIdOrString">
		<DisplayString Condition="Value.index()==0">{Value._Head}</DisplayString>
		<DisplayString>{Value._Tail._Head}</DisplayString>
	</Type>

	<Type Name="core::forms::DialogTemplate">
		<DisplayString>{{ {Title}  ({Controls.size()} controls) }}</DisplayString>
		<Expand>
			<Item Name="[class]">ClassName</Item>
			<Item Name="[title]">Title</Item>
			<Item Name="[style]">Style</Item>
			<Item Name="[exStyle]">ExtendedStyle</Item>
			<Item Name="[font]">Font</Item>
			<Item Name="[points]">Height</Item>
			<Item Name="[controls]">Controls</Item>
		</Expand>
	</Type>

	<Type Name="core::forms::DialogItemTemplate">
		<DisplayString>{{ {ClassName,sub}: {Text}  id=#{(signed)Ident}  }}</DisplayString>
	</Type>

	<Type Name="core::forms::UnmanagedWindow">
		<DisplayString Condition="!Handle">{{ empty }}</DisplayString>
		<DisplayString>{{ present }}</DisplayString>
	</Type>

	<Type Name="core::forms::Window::ChildWindowCollection">
		<DisplayString>{{ virtual-collection }}</DisplayString>
	</Type>

	<Type Name="core::forms::Window::TimerCollection">
		<DisplayString>{{ virtual-collection }}</DisplayString>
	</Type>

	<Type Name="core::forms::Window::DebuggingAide::StateDescription">
		<DisplayString Condition="strlen(Message)">{State,en}: {Message,sb}</DisplayString>
		<DisplayString>{State,en}</DisplayString>
	</Type>

	<Type Name="core::forms::Window::DebuggingAide">
		<DisplayString Condition="strlen(Class._Elems) &amp;&amp; strlen(Text._Elems)">{{ {Class._Elems,sb}: {Text._Elems,s}  {State} }}</DisplayString>
		<DisplayString Condition="strlen(Class._Elems)">{{ {Class._Elems,sb}: {State} }}</DisplayString>
		<DisplayString Condition="State.State == forms::Window::ProcessingState::NotApplicable">{{ N/A }}</DisplayString>
		<DisplayString>{{ {State} }}</DisplayString>
	</Type>

	<Type Name="core::forms::Window::MessageDictionary::MessageProperties">
		<DisplayString>{{ {Name,sb} ({Ident,x}) }}</DisplayString>
	</Type>

	<Type Name="core::forms::Window">
		<Intrinsic Name="numWindowListeners" Expression="Created.size()+Destroyed.size()+Shown.size()+Hidden.size()+Painted.size()+Resized.size()+Clicked.size()+FontChanged.size()" />
		<DisplayString Condition="__vfptr == 0xccCCccCCccCCccCC">&lt;Uninitialized&gt;</DisplayString>
		<DisplayString Condition="!Handle">{{ &lt;Not a window&gt; }}</DisplayString>
		<DisplayString>{Debug}</DisplayString>
		<Expand>
			<Item Name="[class]">Debug.Class._Elems,sb</Item>
			<Item Name="[background]" Condition="Background._Has_value">Background</Item>
			<Item Name="[backcolour]" Condition="BackColour._Has_value">BackColour</Item>
			<Item Name="[forecolour]" Condition="TextColour._Has_value">TextColour</Item>
			<Item Name="[font]" Condition="CustomFont._Has_value">CustomFont</Item>
			<Item Name="[preview]">Debug.Text._Elems,s</Item>
			<Item Name="[state]">Debug.State</Item>
			<Synthetic Name="[window-events]">
				<DisplayString>{numWindowListeners()} listener(s)</DisplayString>
				<Expand>
					<Item Name="[created]" Condition="Created.size()">Created</Item>
					<Item Name="[destroyed]" Condition="Destroyed.size()">Destroyed</Item>
					<Item Name="[shown]" Condition="Shown.size()">Shown</Item>
					<Item Name="[hidden]" Condition="Hidden.size()">Hidden</Item>
					<Item Name="[painted]" Condition="Painted.size()">Painted</Item>
					<Item Name="[resized]" Condition="Resized.size()">Resized</Item>
					<Item Name="[clicked]" Condition="Clicked.size()">Clicked</Item>
					<Item Name="[font-changed]" Condition="FontChanged.size()">FontChanged</Item>
				</Expand>
			</Synthetic>
		</Expand>
	</Type>
	
	<Type Name="core::forms::Control">
		<DisplayString Condition="__vfptr == 0xccCCccCCccCCccCC">&lt;Uninitialized&gt;</DisplayString>
		<DisplayString Condition="!Handle">{{ id={Ident,d} &lt;Not a window&gt; }}</DisplayString>
		<DisplayString>{{ {Debug.Class._Elems,sb}: {Debug.Text._Elems,s}  id={Ident,d}  {Debug.State} }}</DisplayString>
		<Expand>
			<Item Name="[ident]">Ident</Item>
			<ExpandedItem>*(core::forms::Window*)this,nd</ExpandedItem>
		</Expand>
	</Type>

	<Type Name="core::forms::ControlDictionary">
		<Intrinsic Name="size" Expression="m_items.size()"/>
		<DisplayString>{{ {size()} controls }}</DisplayString>
	</Type>

	<Type Name="core::forms::Dialog::EarlyBoundControlCollection">
		<DisplayString>{{ {Controls.size()} controls }}</DisplayString>
	</Type>

	<Type Name="core::forms::Dialog::MouseCaptureState">
		<DisplayString Condition="IsCaptured">{{ captured }}</DisplayString>
		<DisplayString>{{ not-captured }}</DisplayString>
	</Type>

  <Type Name="core::forms::Dialog::NonClientButton">
    <DisplayString>{{ {State}  Mouse={Mouse} }}</DisplayString>
  </Type>

  <Type Name="core::forms::Dialog">
		<Intrinsic Name="numDialogListeners" Expression="Initialized.size()" />
		<DisplayString Condition="__vfptr == 0xccCCccCCccCCccCC">&lt;Uninitialized&gt;</DisplayString>
		<DisplayString Condition="!Handle">{{ Dialog id={DialogId} &lt;Not a window&gt; }}</DisplayString>
		<DisplayString>{{ Dialog: {Debug.Text._Elems,s}  id={DialogId}  {DisplayMode,en}  {Debug.State} }}</DisplayString>
		<Expand>
			<Item Name="[ident]">DialogId</Item>
			<Item Name="[template]">Template</Item>
			<Item Name="[controls]">BoundControls.m_items,na</Item>
			<Item Name="[mode]">DisplayMode</Item>
			<ExpandedItem>*(core::forms::Window*)this,nd</ExpandedItem>
			<Synthetic Name="[dialog-events]">
				<DisplayString>{numDialogListeners()} listener(s)</DisplayString>
				<Expand>
					<Item Name="[created]" Condition="Created.size()">Created</Item>
				</Expand>
			</Synthetic>
		</Expand>
	</Type>

	<Type Name="core::forms::ButtonControl">
		<DisplayString Condition="__vfptr == 0xccCCccCCccCCccCC">&lt;Uninitialized&gt;</DisplayString>
		<DisplayString Condition="!Handle">{{ Button: id={Ident,d} &lt;Not a window&gt; }}</DisplayString>
		<DisplayString>{{ Button: {Debug.Text._Elems,s}  id={Ident,d}  {Debug.State} }}</DisplayString>
		<Expand>
			<ExpandedItem>*(core::forms::Control*)this,nd</ExpandedItem>
		</Expand>
	</Type>

	<Type Name="core::forms::CheckBoxControl">
		<DisplayString Condition="__vfptr == 0xccCCccCCccCCccCC">&lt;Uninitialized&gt;</DisplayString>
		<DisplayString Condition="!Handle">{{ CheckBox: id={Ident,d} &lt;Not a window&gt; }}</DisplayString>
		<DisplayString>{{ CheckBox: {Debug.Text._Elems,s}  id={Ident,d}  {Debug.State} }}</DisplayString>
		<Expand>
			<ExpandedItem>*(core::forms::Control*)this,nd</ExpandedItem>
		</Expand>
	</Type>

	<Type Name="core::forms::GroupBoxControl">
		<DisplayString Condition="__vfptr == 0xccCCccCCccCCccCC">&lt;Uninitialized&gt;</DisplayString>
		<DisplayString Condition="!Handle">{{ GroupBox: id={Ident,d} &lt;Not a window&gt; }}</DisplayString>
		<DisplayString>{{ GroupBox: {Debug.Text._Elems,s}  id={Ident,d}  {Debug.State} }}</DisplayString>
		<Expand>
			<ExpandedItem>*(core::forms::Control*)this,nd</ExpandedItem>
		</Expand>
	</Type>

	<Type Name="core::forms::LabelControl">
		<DisplayString Condition="__vfptr == 0xccCCccCCccCCccCC">&lt;Uninitialized&gt;</DisplayString>
		<DisplayString Condition="!Handle">{{ Label: id={Ident,d} &lt;Not a window&gt; }}</DisplayString>
		<DisplayString>{{ Label: {Debug.Text._Elems,s}  id={Ident,d}  {Debug.State} }}</DisplayString>
		<Expand>
			<Item Name="[alignment]">TextAlignment,en</Item>
			<ExpandedItem>*(core::forms::Control*)this,nd</ExpandedItem>
		</Expand>
	</Type>

	<Type Name="core::forms::OwnerDrawEventArgs">
		<DisplayString>{{ {Type,en} action={Action.Value,en} id={Ident,d} item={Item.Index} state={Item.State} }}</DisplayString>
	</Type>

	<Type Name="core::forms::MeasureItemEventArgs">
		<DisplayString>{{ {Type,en} id={Ident,d} item={Item.Index} width={Width} height={Height} }}</DisplayString>
	</Type>

	<Type Name="core::forms::ComboBoxControl::ItemCollection">
		<DisplayString>{{ Virtual collection }}</DisplayString>
	</Type>

	<Type Name="core::forms::ComboBoxControl::Item">
		<DisplayString>{{ Item #{Index} of ComboBox with id={Owner.Ident} }}</DisplayString>
	</Type>

	<Type Name="core::forms::ComboBoxControl::ItemData">
		<DisplayString>{{ {Title} text={Text} }}</DisplayString>
	</Type>

	<Type Name="core::forms::ListBoxControl::ItemCollection">
		<DisplayString>{{ Virtual collection }}</DisplayString>
	</Type>

	<Type Name="core::forms::ListViewControl::Column">
		<DisplayString>{{ Column #{Index} }}</DisplayString>
	</Type>

	<Type Name="core::forms::ListViewControl::ColumnCollection">
		<DisplayString>{{ Virtual collection }}</DisplayString>
	</Type>

	<Type Name="core::forms::ListViewControl::ColumnCollection::Iterator&lt;*&gt;">
		<DisplayString>{{ at Column #{Index} }}</DisplayString>
	</Type>
	
	<Type Name="core::forms::ListViewControl::Item">
		<DisplayString>{{ Item #{Index} }}</DisplayString>
	</Type>
	
	<Type Name="core::forms::ListViewControl::ItemCollection">
		<DisplayString>{{ Virtual collection }}</DisplayString>
	</Type>

	<Type Name="core::forms::ListViewControl::ItemCollection::Iterator&lt;*&gt;">
		<DisplayString>{{ at Item #{Index} }}</DisplayString>
	</Type>

	<Type Name="core::forms::ListViewControl::SubItem">
		<DisplayString>{{ SubItem #{Index} of Item #{ItemIdx} }}</DisplayString>
	</Type>
	
	<Type Name="core::forms::ListViewControl::SubItemCollection">
		<DisplayString>{{ Virtual collection }}</DisplayString>
	</Type>

	<Type Name="core::forms::ListViewControl::SubItemCollection::Iterator&lt;*&gt;">
		<DisplayString>{{ at SubItem #{Index} of Item #{ItemIdx} }}</DisplayString>
	</Type>

  <Type Name="core::forms::LookNFeelProvider">
    <DisplayString>{{ Look-n-feel provider }}</DisplayString>
    <Expand>
      <Item Name="[button]">Colours.Button</Item>
      <Item Name="[caption]">Colours.Caption</Item>
      <Item Name="[control]">Colours.Control</Item>
      <Item Name="[highlight]">Colours.Highlight</Item>
      <Item Name="[primary]">Colours.Primary</Item>
      <Item Name="[secondary]">Colours.Secondary</Item>
      <Item Name="[tertiary]">Colours.Tertiary</Item>
      <Item Name="[window]">Colours.Window</Item>
    </Expand>
  </Type>

  <Type Name="core::forms::Win31LookNFeel">
    <DisplayString>{{ Win 3.1 Look-n-feel provider }}</DisplayString>
    <Expand>
      <ExpandedItem>*(core::forms::LookNFeelProvider*)this,nd</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="core::forms::Nt6LookNFeel">
    <DisplayString>{{ NT 6 Look-n-feel provider }}</DisplayString>
    <Expand>
      <ExpandedItem>*(core::forms::LookNFeelProvider*)this,nd</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="core::forms::ModernLookNFeel">
    <DisplayString>{{ Modern Look-n-feel provider }}</DisplayString>
    <Expand>
      <ExpandedItem>*(core::forms::LookNFeelProvider*)this,nd</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="core::forms::RetroLookNFeel">
    <DisplayString>{{ Retro Look-n-feel provider }}</DisplayString>
    <Expand>
      <ExpandedItem>*(core::forms::LookNFeelProvider*)this,nd</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="core::forms::DarkRetroLookNFeel">
    <DisplayString>{{ Retro Look-n-feel provider (dark-mode) }}</DisplayString>
    <Expand>
      <ExpandedItem>*(core::forms::LookNFeelProvider*)this,nd</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="core::forms::DarkModernLookNFeel">
    <DisplayString>{{ Modern Look-n-feel provider (dark-mode) }}</DisplayString>
    <Expand>
      <ExpandedItem>*(core::forms::LookNFeelProvider*)this,nd</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="tagMEASUREITEMSTRUCT">
    <AlternativeType Name="MEASUREITEMSTRUCT"/>
    <DisplayString Condition="itemID &gt; 1000000">{{ Measure {(core::forms::OwnerDrawControl)CtlType,en} id=#{CtlID} height={itemHeight} }}</DisplayString>
    <DisplayString>{{ Measure {(core::forms::OwnerDrawControl)CtlType,en} id=#{CtlID} item=#{itemID} height={itemHeight} }}</DisplayString>
    <Expand HideRawView="true">
      <Item Name="[ctrl]">CtlID</Item>
      <Item Name="[item]">itemID</Item>
      <Item Name="[kind]">(core::forms::OwnerDrawControl)CtlType,en</Item>
      <Item Name="[height]">itemHeight</Item>
      <Item Name="[width]">itemWidth</Item>
      <Item Name="[param]">(void*)itemData</Item>
    </Expand>
  </Type>

</AutoVisualizer>